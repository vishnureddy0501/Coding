    vector<int> vec = {10, 20, 30};
    cout << vec[1];       // Output: 20
    vec.push_back(value) //Adds value to the end.
    vec.pop_back(); // Removes the last element.
    vec.insert(vec.begin() + 1, 150);  // insert at specific position
    vec.erase(vec.begin() + 1);       // Removes the element at pos.
    vec.size();   // size of vector
    sort(vec.begin(), vec.end()) // Sorts the vector. Inplace sorting.

find in a vector:
-----------------
    find(vec.begin(), vec.end(), value): Searches for value and returns an iterator.
    auto it = find(vec.begin(), vec.end(), 20);
    if (it != vec.end()) std::cout << "Found";  // Output: Found

6. Finding Max and Min Elements
    int maxVal = *max_element(vec.begin(), vec.end());  // maxVal: 30
    int minVal = *min_element(vec.begin(), vec.end());  // minVal: 10

7. Reversing
    reverse(vec.begin(), vec.end()): Reverses the vector.

8. Clearing Elements
    vec.clear();  // vec: {}

vec.erase(vec.begin() + 1, vec.begin() + 3); // erase multiple

insert another vector:
---------------------
std::vector<int> vec = {10, 20, 50};
std::vector<int> toInsert = {30, 40};

// Insert range from another vector
vec.insert(vec.begin() + 2, toInsert.begin(), toInsert.end());

extract some part of vector and assign to other:
-----------------------------------------------
    std::vector<int> subset(original.begin() + start, original.begin() + start + length);