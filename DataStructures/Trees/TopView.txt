vector<int> getTopView(TreeNode<int> *root)
{
    vector<int> res;
    if (root == NULL) return res;
    queue<pair<TreeNode<int>*, int>> q;
    map<int, int> m;
    q.push({root, 0}); 
    while(q.size() > 0) {
        int size = q.size();
        for (int i = 0; i < size; i++) {
            auto node = q.front();
            int x = node.second;
            q.pop();
            if (m.find(x) == m.end()) {
                m[x] = node.first->data;
            }
            if (node.first->left != NULL) {
                q.push({node.first->left, x - 1});
            }
            if (node.first->right != NULL) {
                q.push({node.first->right, x + 1});
            }
        }
    }
    for (auto value: m) {
        res.push_back(value.second);
    }
    return res;
}
